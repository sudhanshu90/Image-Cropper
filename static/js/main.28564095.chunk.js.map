{"version":3,"sources":["components/ImageCrop.jsx","App.js","index.js"],"names":["ImageCrop","useState","srcImg","setSrcImg","image","setImage","aspect","crop","setCrop","result","setResult","hideinst","sethideinst","area","setarea","axis","setaxis","handleImage","event","a","URL","createObjectURL","target","files","console","log","className","type","accept","onChange","style","maxWidth","margin","src","onImageLoaded","onClick","width","height","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","base64Image","toDataURL","parseFloat","toFixed","alt","href","download","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPA+GeA,MA1Gf,WACE,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,CAAEK,OAAQ,GAAK,IAAhD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BP,mBAAS,MAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAgCT,oBAAS,GAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAwBX,oBAAS,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAAwBb,oBAAS,GAAjC,mBAAOc,EAAP,KAAaC,EAAb,KAIMC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAClBhB,EAAUiB,IAAIC,gBAAgBH,EAAMI,OAAOC,MAAM,KACjDC,QAAQC,IAAIP,EAAMI,OAAOC,MAAM,IAC/BX,GAAY,GAHM,2CAAH,sDAuCjB,OACE,sBAAKc,UAAU,YAAf,UACE,oBAAIA,UAAU,eAAd,uCAEA,oBAAIA,UAAS,2BAAsBf,EAAW,SAAW,IAAzD,4CAIA,qBAAKe,UAAU,cAAf,SACE,uBACEC,KAAK,OACLC,OAAO,UACPC,SAAUZ,EACVS,UAAU,kBAGd,oBAAIA,UAAS,eAAUb,EAAO,SAAW,IAAzC,gCAIA,gCACGX,GACC,sBAAKwB,UAAU,oBAAf,UACE,cAAC,IAAD,CACEI,MAAO,CAAEC,SAAU,MAAOC,OAAQ,UAClCC,IAAK/B,EACLgC,cAAe7B,EACfE,KAAMA,EACNsB,SAAUrB,IAGZ,wBAAQkB,UAAU,aAAaS,QAhEnB,WAClB,GAAG5B,EAAK6B,OAAyB,IAAhB7B,EAAK8B,OAAa,CACnC,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAASrC,EAAMsC,aAAetC,EAAMgC,MACpCO,EAASvC,EAAMwC,cAAgBxC,EAAMiC,OAC3CC,EAAOF,MAAQ7B,EAAK6B,MACpBE,EAAOD,OAAS9B,EAAK8B,OACTC,EAAOO,WAAW,MAC1BC,UACF1C,EACAG,EAAKwC,EAAIN,EACTlC,EAAKyC,EAAIL,EACTpC,EAAK6B,MAAQK,EACblC,EAAK8B,OAASM,EACd,EACA,EACApC,EAAK6B,MACL7B,EAAK8B,QAEPvB,GAAQ,GACRE,GAAQ,GAER,IAAMiC,EAAcX,EAAOY,UAAU,aAAc,GACnDxC,EAAUuC,QAKJnC,GAAQ,IAoCR,qBAOJ,qBAAKY,UAAS,sBAAiBX,EAAO,SAAW,IAAjD,SACA,uCAAUoC,WAAW5C,EAAKwC,GAAGK,QAAQ,GAArC,UAAgDD,WAAW5C,EAAKyC,GAAGI,QAAQ,GAA3E,cAA0FD,WAAW5C,EAAK8B,QAAQe,QAAQ,GAA1H,aAAwID,WAAW5C,EAAK6B,OAAOgB,QAAQ,QAEtK3C,GACC,sBAAKiB,UAAU,eAAf,UACE,qBAAKO,IAAKxB,EAAQ4C,IAAI,cACtB,mBAAGC,KAAM7C,EAAQiB,UAAU,WAAW6B,UAAQ,EAA9C,gCCtFGC,MAXf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,8BACE,cAAC,EAAD,SCFR+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,W","file":"static/js/main.28564095.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./image.css\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport ReactCrop from \"react-image-crop\";\r\n\r\nfunction ImageCrop() {\r\n  const [srcImg, setSrcImg] = useState();\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({ aspect: 16 / 6 });\r\n  const [result, setResult] = useState(null);\r\n  const [hideinst, sethideinst] = useState(false);\r\n  const [area, setarea] = useState(false);\r\n  const [axis, setaxis] = useState(true);\r\n\r\n\r\n\r\n  const handleImage = async (event) => {\r\n    setSrcImg(URL.createObjectURL(event.target.files[0]));\r\n    console.log(event.target.files[0]);\r\n    sethideinst(true);\r\n  };\r\n\r\n  const getCroppedImg = () => {\r\n      if(crop.width || crop.height !== 0){\r\n      const canvas = document.createElement(\"canvas\");\r\n      const scaleX = image.naturalWidth / image.width;\r\n      const scaleY = image.naturalHeight / image.height;\r\n      canvas.width = crop.width;\r\n      canvas.height = crop.height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(\r\n        image,\r\n        crop.x * scaleX,\r\n        crop.y * scaleY,\r\n        crop.width * scaleX,\r\n        crop.height * scaleY,\r\n        0,\r\n        0,\r\n        crop.width,\r\n        crop.height\r\n      );\r\n      setarea(false);\r\n      setaxis(false);\r\n\r\n      const base64Image = canvas.toDataURL(\"image/jpeg\", 1);\r\n      setResult(base64Image);\r\n      }\r\n     \r\n     else{\r\n       \r\n            setarea(true);\r\n }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h5 className=\"header_title\">Image Cropper Application</h5>\r\n\r\n      <h3 className={`header_sec_title ${hideinst ? \"active\" : \"\"}`}>\r\n        *Select Image you want to crop\r\n      </h3>\r\n    \r\n      <div className=\"file_select\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImage}\r\n          className=\"select_file\"\r\n        />\r\n      </div>\r\n      <h3 className={`area ${area ? \"active\" : \"\"}`}>\r\n        *Please crop image \r\n      </h3>\r\n\r\n      <div>\r\n        {srcImg && (\r\n          <div className=\"crop_image_holder\">\r\n            <ReactCrop\r\n              style={{ maxWidth: \"70%\", margin: \"0 auto\" }}\r\n              src={srcImg}\r\n              onImageLoaded={setImage}\r\n              crop={crop}\r\n              onChange={setCrop}\r\n            />\r\n          \r\n            <button className=\"cropButton\" onClick={getCroppedImg}>\r\n              Crop\r\n            </button>\r\n\r\n           \r\n            </div>\r\n         )}\r\n        <div className={`coordinates ${axis ? 'active' : \"\"}`}>\r\n        <h3>-x : {parseFloat(crop.x).toFixed(0)}, -y : {parseFloat(crop.y).toFixed(0)}, height : {parseFloat(crop.height).toFixed(0)}, width : {parseFloat(crop.width).toFixed(0)}</h3>\r\n        </div>\r\n        {result && (\r\n          <div className=\"result_image\">\r\n            <img src={result} alt=\"not_found\" />\r\n            <a href={result} className=\"dawnlaod\" download>\r\n          Dawnlaod\r\n        </a>\r\n          </div>\r\n         \r\n          \r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCrop;\r\n","import ImageCrop from \"./components/ImageCrop\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <ImageCrop/>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}